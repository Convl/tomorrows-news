"""add fastapi-users with uuid

Revision ID: 521bb88ec1cb
Revises: 53ce4f38dde2
Create Date: 2025-08-01 14:39:13.558503

"""

from typing import Sequence, Union

import fastapi_users_db_sqlalchemy.generics
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "521bb88ec1cb"
down_revision: Union[str, Sequence[str], None] = "53ce4f38dde2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Drop foreign key constraint first
    op.drop_constraint("topics_user_id_fkey", "topics", type_="foreignkey")

    # Clear all data to avoid conversion issues
    op.execute("TRUNCATE TABLE topics CASCADE")
    op.execute("TRUNCATE TABLE users CASCADE")

    # Now safely convert columns
    op.alter_column(
        "topics",
        "user_id",
        existing_type=sa.INTEGER(),
        type_=fastapi_users_db_sqlalchemy.generics.GUID(),
        existing_nullable=False,
        postgresql_using="NULL::uuid",
    )

    op.add_column("users", sa.Column("is_verified", sa.Boolean(), nullable=False, server_default="false"))

    # Drop old sequence/default, convert type, set new default
    op.alter_column("users", "id", server_default=None)
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        type_=fastapi_users_db_sqlalchemy.generics.GUID(),
        existing_nullable=False,
        postgresql_using="NULL::uuid",
    )
    op.alter_column("users", "id", server_default=sa.text("gen_random_uuid()"))

    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(length=255), type_=sa.String(length=320), existing_nullable=False
    )
    op.alter_column(
        "users",
        "hashed_password",
        existing_type=sa.VARCHAR(length=255),
        type_=sa.String(length=1024),
        existing_nullable=False,
    )

    # Recreate foreign key constraint
    op.create_foreign_key("topics_user_id_fkey", "topics", "users", ["user_id"], ["id"])

    # Drop old index safely
    try:
        op.drop_index(op.f("ix_users_id"), table_name="users")
    except Exception:
        pass


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.alter_column(
        "users",
        "hashed_password",
        existing_type=sa.String(length=1024),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "users", "email", existing_type=sa.String(length=320), type_=sa.VARCHAR(length=255), existing_nullable=False
    )
    op.alter_column(
        "users",
        "id",
        existing_type=fastapi_users_db_sqlalchemy.generics.GUID(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.drop_column("users", "is_verified")
    op.alter_column(
        "topics",
        "user_id",
        existing_type=fastapi_users_db_sqlalchemy.generics.GUID(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
