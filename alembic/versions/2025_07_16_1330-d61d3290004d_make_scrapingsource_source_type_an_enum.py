"""make ScrapingSource.source_type an Enum

Revision ID: d61d3290004d
Revises: fcde91f8f8e3
Create Date: 2025-07-16 13:30:16.525756

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d61d3290004d"
down_revision: Union[str, Sequence[str], None] = "fcde91f8f8e3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    scrapingsourceenum = postgresql.ENUM("Webpage", "Rss", "Api", name="scrapingsourceenum")
    scrapingsourceenum.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "event_sources",
        "found_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("events", "is_verified", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("events", "is_duplicate", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "events",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "events",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    connection = op.get_bind()
    connection.execute(
        sa.text("""
        ALTER TABLE scraping_sources 
        ALTER COLUMN source_type TYPE scrapingsourceenum 
        USING source_type::scrapingsourceenum
    """)
    )
    op.alter_column("scraping_sources", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "scraping_sources",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "scraping_sources",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("topics", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "topics",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "topics",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("users", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("users", "is_superuser", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("users", "is_superuser", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column("users", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "topics",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "topics",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("topics", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "scraping_sources",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "scraping_sources",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("scraping_sources", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "scraping_sources",
        "source_type",
        existing_type=sa.Enum("Webpage", "Rss", "Api", name="scrapingsourceenum"),
        type_=sa.VARCHAR(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "events",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "events",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("events", "is_duplicate", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column("events", "is_verified", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "event_sources",
        "found_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###
