"""modify embeddings column type

Revision ID: f3a1d693bcb2
Revises: d0bcf69bb139
Create Date: 2025-07-25 12:47:16.214298

"""

from typing import Sequence, Union

import pgvector.sqlalchemy
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f3a1d693bcb2"
down_revision: Union[str, Sequence[str], None] = "d0bcf69bb139"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_apscheduler_jobs_next_run_time"), table_name="apscheduler_jobs")
    op.drop_table("apscheduler_jobs")

    # Drop and recreate vector columns to avoid type conversion issues
    op.drop_column("events", "semantic_vector")
    op.drop_column("events", "location_vector")
    op.add_column("events", sa.Column("semantic_vector", pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True))
    op.add_column("events", sa.Column("location_vector", pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True))

    op.drop_column("extracted_events", "semantic_vector")
    op.drop_column("extracted_events", "location_vector")
    op.add_column(
        "extracted_events", sa.Column("semantic_vector", pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True)
    )
    op.add_column(
        "extracted_events", sa.Column("location_vector", pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop and recreate vector columns as TEXT
    op.drop_column("extracted_events", "location_vector")
    op.drop_column("extracted_events", "semantic_vector")
    op.add_column("extracted_events", sa.Column("location_vector", sa.TEXT(), nullable=True))
    op.add_column("extracted_events", sa.Column("semantic_vector", sa.TEXT(), nullable=True))

    op.drop_column("events", "location_vector")
    op.drop_column("events", "semantic_vector")
    op.add_column("events", sa.Column("location_vector", sa.TEXT(), nullable=True))
    op.add_column("events", sa.Column("semantic_vector", sa.TEXT(), nullable=True))

    op.create_table(
        "apscheduler_jobs",
        sa.Column("id", sa.VARCHAR(length=191), autoincrement=False, nullable=False),
        sa.Column("next_run_time", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("job_state", postgresql.BYTEA(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("apscheduler_jobs_pkey")),
    )
    op.create_index(op.f("ix_apscheduler_jobs_next_run_time"), "apscheduler_jobs", ["next_run_time"], unique=False)
    # ### end Alembic commands ###
