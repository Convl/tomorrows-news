"""Add FastAPI-Users support with UUID primary keys

Revision ID: 4e65468e6aad
Revises: 53ce4f38dde2
Create Date: 2025-08-01 13:18:33.377887

"""

from typing import Sequence, Union

import fastapi_users_db_sqlalchemy.generics
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4e65468e6aad"
down_revision: Union[str, Sequence[str], None] = "53ce4f38dde2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Drop the old sequence default
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        existing_server_default=sa.text("nextval('users_id_seq'::regclass)"),
        server_default=None,
    )

    # Step 2: Convert to UUID type
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        type_=fastapi_users_db_sqlalchemy.generics.GUID(),
        existing_nullable=False,
        postgresql_using="gen_random_uuid()",
    )

    # Step 3: Set new UUID default
    op.alter_column(
        "users",
        "id",
        existing_type=fastapi_users_db_sqlalchemy.generics.GUID(),
        server_default=sa.text("gen_random_uuid()"),
    )

    # Convert topics.user_id to UUID (will need manual linking afterward)
    op.alter_column(
        "topics",
        "user_id",
        existing_type=sa.INTEGER(),
        type_=fastapi_users_db_sqlalchemy.generics.GUID(),
        existing_nullable=False,
        postgresql_using="gen_random_uuid()",
    )

    # Add the is_verified column for FastAPI-Users
    op.add_column("users", sa.Column("is_verified", sa.Boolean(), nullable=False, server_default="false"))
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(length=255), type_=sa.String(length=320), existing_nullable=False
    )
    op.alter_column(
        "users",
        "hashed_password",
        existing_type=sa.VARCHAR(length=255),
        type_=sa.String(length=1024),
        existing_nullable=False,
    )
    op.drop_index(op.f("ix_users_id"), table_name="users")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.alter_column(
        "users",
        "hashed_password",
        existing_type=sa.String(length=1024),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "users", "email", existing_type=sa.String(length=320), type_=sa.VARCHAR(length=255), existing_nullable=False
    )
    op.alter_column(
        "users",
        "id",
        existing_type=fastapi_users_db_sqlalchemy.generics.GUID(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        existing_server_default=sa.text("nextval('users_id_seq'::regclass)"),
    )
    op.drop_column("users", "is_verified")
    op.alter_column(
        "topics",
        "user_id",
        existing_type=fastapi_users_db_sqlalchemy.generics.GUID(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
